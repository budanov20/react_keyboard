{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyPressed","handleKeyPress","event","setState","code","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZH,WAA2B,UAAfE,EAAME,KACd,QACAF,EAAMG,OAjBhB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKP,kBAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,kBAV/C,oBAqBE,WACE,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKT,MAAMC,WAAX,mCAC+BQ,KAAKT,MAAMC,WAD1C,KAEG,kCA3Bd,GAAyBW,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.453d2a13.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  keyPressed: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    keyPressed: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    this.setState({\n      keyPressed: event.code === 'Space'\n        ? 'Space'\n        : event.key,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.keyPressed\n            ? `The last pressed key is [${this.state.keyPressed}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}